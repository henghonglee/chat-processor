# OpenAI API
# Obtain from https://platform.openai.com/
OPENAI_API_KEY=sk-your-openai-key
# Optional: Override default model (default: gpt-4o-mini)
# OPENAI_MODEL=gpt-4o-mini

# Google Gemini API (for entity extraction)
# Obtain from https://aistudio.google.com/app/apikey
GOOGLE_API_KEY=your-google-api-key

# Twitter API Credentials (for URL expansion)
# Obtain from https://developer.twitter.com/en/portal/dashboard
TWITTER_API_KEY=your-twitter-api-key
TWITTER_BEARER_TOKEN=your-twitter-bearer-token

# Groq API (for Cypher query generation)
# Obtain from https://console.groq.com/keys
GROQ_API_KEY=your-groq-api-key-here

# Neo4j connection (Local setup - see docker-compose.yml)
NEO4J_URI=bolt://localhost:7687
NEO4J_USER=neo4j
NEO4J_PASSWORD=password

# Optional project settings
BASE_DIR=.

# Search configuration
# USE_HYBRID_SEARCH=true  # Default: true (uses hybrid search combining vector + full-text)

# Ollama (for local embeddings)
# Only needed if using EMBEDDING_PROVIDER=ollama
# OLLAMA_URL=http://localhost:11434

# Embedding configuration
# EMBEDDING_PROVIDER=openai  # "openai" or "ollama"
# EMBEDDING_MODEL=text-embedding-3-large

# Copy this file to .env and edit values.
