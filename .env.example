# OpenAI API
# Obtain from https://platform.openai.com/
OPENAI_API_KEY=sk-your-openai-key
# Optional: Override default model (default: gpt-4o-mini)
# OPENAI_MODEL=gpt-4o-mini

# Google Gemini API (for entity extraction)
# Obtain from https://aistudio.google.com/app/apikey
GOOGLE_API_KEY=your-google-api-key

# Twitter API Credentials (for URL expansion)
# Obtain from https://developer.twitter.com/en/portal/dashboard
TWITTER_API_KEY=your-twitter-api-key
TWITTER_BEARER_TOKEN=your-twitter-bearer-token

# Groq API (for Cypher query generation)
# Obtain from https://console.groq.com/keys
GROQ_API_KEY=your-groq-api-key-here
OPENROUTER_API_KEY=your-openrouter-api-key-here

# Reranking APIs (optional - only needed for cloud-based reranking)
# Cohere Rerank API - Obtain from https://dashboard.cohere.com/
COHERE_API_KEY=your-cohere-api-key
# Jina Rerank API - Obtain from https://jina.ai/
JINA_API_KEY=your-jina-api-key

# Neo4j connection (Local setup - see docker-compose.yml)
NEO4J_URI=bolt://localhost:7687
NEO4J_USER=neo4j
NEO4J_PASSWORD=password

# Optional project settings
BASE_DIR=.

# Search configuration
# USE_HYBRID_SEARCH=true  # Default: true (uses hybrid search combining vector + full-text)

# Ollama (for local embeddings)
# Only needed if using EMBEDDING_PROVIDER=ollama
# OLLAMA_URL=http://localhost:11434

# Embedding configuration
# EMBEDDING_PROVIDER=openai  # "openai" or "ollama"
# EMBEDDING_MODEL=text-embedding-3-large

# ===== Reranker Configuration =====
# Reranking method: "cross-encoder" (best quality), "zerank" (fast), "cohere" (cloud), "jina" (cloud)
RERANK_METHOD=cross-encoder

# Model selection (depends on method)
# For cross-encoder: cross-encoder/ms-marco-MiniLM-L-6-v2, BAAI/bge-reranker-base, BAAI/bge-reranker-large
# For zerank: all-MiniLM-L6-v2, all-mpnet-base-v2, all-distilroberta-v1
# For cohere: rerank-english-v2.0, rerank-multilingual-v2.0
# For jina: jina-reranker-v1-base-en
#RERANK_MODEL=cross-encoder/ms-marco-MiniLM-L-6-v2

# Result counts
#RERANK_TOP_K_BEFORE=50  # How many results to rerank from hybrid search
#RERANK_TOP_K_AFTER=20   # How many results to return after reranking

# Score filtering
#RERANK_MIN_SCORE=0.0    # Minimum score threshold (0.0 = no filtering)

# Feature toggles
#RERANK_USE_QUERY_EXPANSION=true   # Use extracted entities for boosting
#RERANK_BOOST_EXACT_MATCHES=true   # Boost results with exact keyword matches
#RERANK_BOOST_RECENT=false         # Boost more recent results

# Boosting factors (multipliers applied to scores)
#RERANK_EXACT_MATCH_BOOST=1.3  # Boost for exact keyword matches
#RERANK_ENTITY_BOOST=1.2       # Boost for entity matches
#RERANK_RECENT_BOOST=1.1       # Boost for recent results

# Model settings
#RERANK_BATCH_SIZE=32      # Batch size for processing
#RERANK_DEVICE=cpu         # "cpu" or "cuda" for GPU acceleration
#RERANK_MAX_LENGTH=512     # Maximum token length for documents

# API settings (for cloud rerankers)
#RERANK_API_TIMEOUT=30     # API request timeout in seconds

# Copy this file to .env and edit values.
